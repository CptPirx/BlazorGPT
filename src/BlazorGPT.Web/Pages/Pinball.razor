@page "/pinball"
@page "/pinball/{table}"
@using BlazorGPT.Pipeline
@layout EmptyLayout
<h3>PinballGPT</h3>

<div class="row">
    <div class="col-2 ">
        <RadzenText Text="Select game" Style="color:lightgreen"/>
    </div>
    <div class="col-4">
        <RadzenDropDown style="color:lightgreen;"
                        Data="_pinballMachines.OrderBy(m => m)" TValue="string" Change="Go" @bind-Value="@Table">
            Select game
        </RadzenDropDown>
    </div>
</div>

<ConversationDisplay Conversation="@Conversation" Style="height: auto"/>

@code {

    [Inject]
    public ChatWrapper Chat { get; set; }

    public Conversation? Conversation { get; set; }

    [Parameter]
    public string? Table { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            Chat.OnStreamCompletion += async s =>
            {
                StateHasChanged();
                return s;
            };

            CreateConversation();

            if (Table != null && Conversation != null)
            {
                Conversation = await Chat.SendWithPipeline(Conversation);

                Conversation.AddMessage(new ConversationMessage("user", "What are the different modes or objectives in the game " + Table + " and how do I start a mode?"));
                Conversation = await Chat.SendWithPipeline(Conversation);

                Conversation.AddMessage(new ConversationMessage("user", "How do I start the different multi balls in the game " + Table + "?"));
                Conversation = await Chat.SendWithPipeline(Conversation);
            }
        }
    }

    private void CreateConversation()
    {
        Conversation = Conversation.CreateConversation("", "You are a very experienced pinball player. You know the rules of all the individual pinball machines. You can explain how to start and collect modes. You will explain how to light and start multiballs. You will explain what to focus on during the different specific multiballs");

        if (Table != null)
        {
            Conversation.AddMessage(new ConversationMessage("user", "Who designed " + Table + " and when was it released and by which manufacturer"));
        }
    }



    readonly string[] _pinballMachines =
    {
        "Bad Cats",
        "Corvette",
        "Cue Ball Wizard",
        "Devil's Dare",
        "Doctor Who",
        "Dr Dude",
        "Earthshaker",
        "Fire!",
        "Fish Tales",
        "Flintstones",
        "Getaway",
        "Gilligan's Island",
        "Harlem Globetrotters On Tour",
        "Iron Man",
        "James Cameron's Avatar",
        "Jokerz!",
        "Judge Dredd",
        "Junk Yard",
        "Lord of the Rings",
        "Metallica (Pro)",
        "Partyzone",
        "Pirates of the Caribbean",
        "Popeye",
        "Star Trek TNG",
        "Tales from the crypt",
        "Taxi",
        "The Machine: Bride of Pinbot",
        "The Munsters (Pro)",
        "The Party Zone",
        "The Shadow",
        "Transformers",
        "WHO dunnit",
        "Whirlwind",
        "Monster Bash",
        "Attack from Mars",
        "Medieval Madness",
        "Indiana Jones",
        "The Addams Family",
        "Twilight Zone",
        "Creature from the Black Lagoon",
        "White Water",
        "Funhouse",
        "No Good Gofers",
        "Terminator 2"
    };

    [Inject]
    public NavigationManager? NavigationManager { get; set; }

    private void Go()
    {
        NavigationManager?.NavigateTo("/pinball/" + Table, true);
    }


}